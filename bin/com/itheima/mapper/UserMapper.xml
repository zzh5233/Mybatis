<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.itheima.mapper.UserMapper">
	
	<!-- 定义sql片段
		id：sql片段的唯一标识
		要基于单表来定义sql片段，这样这个sql片段可重用性才高
		在sql片段中不要包括where
	 -->
	<sql id="query_user_where">
		<if test="userCustom.id != 0 ">
			and user.id = #{userCustom.id}	
		</if>
		<if test="userCustom.username!=null and userCustom.username!=''">
			and user.username like '%${userCustom.username}%'
		</if>
	</sql>
	
	<!-- 测试调用存储过程-查询学号小于sid的学生人数 -->
	<select id="queryCountWithProcedure" statementType="CALLABLE" parameterType="HashMap">
		{
			CALL queryCountWithProcedure(
				#{sid, jdbcType=INTEGER, mode=IN},
				#{scount, jdbcType=INTEGER, mode=OUT}
			)
		}
	</select>
	<!-- 调用存储过程 -根据学号删除学生 -->
	<delete id="deleteUserByIdWithProcedure" statementType="CALLABLE" parameterType="HashMap">
		{
			CALL deleteUserByIdWithProcedure(
				#{sid, jdbcType=INTEGER, mode=IN}
			)
		}
	</delete>
	
	
	<!-- 定义resultMap	查询出来的字段名和所映射的类中的属性名不一致时，指定映射关系
		select id id_,username username_ from user;和User类属性作为映射
	 -->
	<resultMap type="User" id="userResultMap">
		<id property="id" column="id_"/>
		<result property="username" column="username_"/>
	</resultMap>
	
	<!-- 使用resultMap进行输出映射 -->
	<select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
		select id id_ ,username username_ from user where id = #{id}
	</select>
	
	<!-- 用户信息综合查询。 select * from user where username like '%zz%' AND (id=1 OR id=2 OR id=3);
		使用sql拼接	 AND (id=1 OR id=2 OR id=3) -->
	<select id="findUserList2" parameterType="com.itheima.domain.UserQueryVo"
		resultType="com.itheima.domain.UserCustom">
		select * from user
		<!-- where可以自动去电条件中的第一个and -->
		<where>
			<if test="userCustom.username!=null and userCustom.username!=''">
				and user.username like '%${userCustom.username}%'
			</if>
			<if test="ids != null">
				<!-- 使用foreach遍历传入ids	 -->			
				<foreach collection="ids" item="user_id" open="AND(" close=")" separator="OR" >
					<!-- 每个遍历需要拼接的串 -->
					id=#{user_id}
				</foreach>
			</if>
		
		</where>
	</select>
	
	
	
	<!-- 用户信息综合查询 -->
	<select id="findUserList" parameterType="com.itheima.domain.UserQueryVo"
		resultType="com.itheima.domain.UserCustom">
		select * from user
		<!-- where可以自动去电条件中的第一个and -->
		<where>
			<include refid="query_user_where"></include>
			<!-- 还要引用其他的sql片段 -->
		</where>
	</select>
	
	<!-- 用户信息综合查询总数 -->
	<select id="findUserCount" parameterType="com.itheima.domain.UserQueryVo"
		resultType="int">
		select count(*) from user
		<!-- where可以自动去电条件中的第一个and -->
		<where>
			<if test="userCustom.id != 0 ">
				and user.id = #{userCustom.id}	
			</if>
			<if test="userCustom.username!=null and userCustom.username!=''">
				and user.username like '%${userCustom.username}%'
			</if>
		</where>
	</select>
	
	
	
	<!-- 根据id查询查询用户 -->
	<select id="findUserById" parameterType="int" resultType="com.itheima.domain.User">
		select * from user where id = #{id}
	</select>
	
	<!-- 根据姓名模糊查询用户 -->
	<select id="findUserByName" parameterType="java.lang.String" resultType="com.itheima.domain.User">
		select * from user where username like '%${value}%'
	</select>
	
	<!-- 添加用户 -->
	<insert id="addUser" parameterType="com.itheima.domain.User">
		<!-- 将插入数据的主键返回，返回到user对象中 -->
		<selectKey keyProperty="id" order="AFTER" resultType="int">
			select last_insert_id()
		</selectKey>
		
		insert into user(username,password,birthday) values(#{username},#{password},#{birthday})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="int">
		delete from user where id = #{id}
	</delete>
	
	<!-- 修改用户 -->
	<delete id="updateUser" parameterType="com.itheima.domain.User">
		update user set username=#{username},password=#{password} where id=#{id}
	</delete>

</mapper>